\section{Introduction}
  Many \glspl{abs} contain mobile agents located within a continuous space. These agents may represent entities such as particles, people and vehicles. In order for these mobile agents to decide actions, they must be aware of their neighbouring agents. This awareness is typically provided by fixed radius near neighbours (FRNNs) search, whereby each agent considers the properties of every other agent located within a spatial radial area about their simulated position. This searched area can be considered the agent's neighbourhood and must be searched every timestep of a simulations, ensuring the agent has access to the most recent information about their neighbourhood. In many cases such as flocking, pedestrian interaction and cellular systems, the majority of time is spent performing this neighbourhood search, as opposed to agent logic. It is hence often the primary performance limitation.
  
  The most common technique utilised for accelerating FRNNs is one of uniform spatial partitioning. Within uniform spatial partitioning, the environment is decomposed into a regular grid, partitioned according to the interaction radius. Agents are then stored or sorted according to the grid cell they are located in a compact array. An index can be used to provide fast access to the agents contained within each cell, however the nature of the problem leads to many scattered memory accesses harming performance. This has caused researchers to seek to improve the efficiency of FRNNs handling\cite{GS*10,Hoe14,HY*15}, however without a rigorous standard to compare implementations, exposing their relative benefits is greatly complicated.
  
  With \glspl{abs} reliance on FRNNs there are many capable available frameworks, providing an initial slate for assessment. The \gls{openab} exists for the wider assessment of \glspl{abs} and to pool the research community's ABS knowledge and resources\footnote{http://www.openab.org}. \textit{Something, something. This platform provides a public repository for the presentation of agent benchmark models and results collected across a wide range of simulation frameworks and hardware architectures.} By unifying the process of benchmarking \glspl{abs} it is hoped that the OpenAB project will foster the necessary transparency and standards among the \gls{abs} community, ensuring that rigorous benchmarking standards are adhered to.
  
  This paper standardises a benchmark model named circles, previously used by frameworks such as FLAMEGPU\cite{RR082}, which has been designed to assess the performance of FRNNs implementations. A formal specification of the benchmark and it's applications is provided alongside a preliminary comparison of results obtained from: FLAMEGPU, MASON, REPAST. This work provides a foundation for the future assessment of \glspl{abs} frameworks and a \textit{something about choice of framework/motivating framework maintainers to improve perf ?}.
  
  The results within this paper assess each frameworkâ€™s FRNNs implementation against the metrics of: problem size; neighbourhood size; and entropy, which can be levied from the circles benchmark. Most apparent from these results is how the runtime scales linearly with problem size after maximal hardware utilisation, however a much larger problem size is required to fully utilise \gls{gpu} hardware.
  
  The remainder of this paper is organised as follows: Section \ref{sec:related-work} provides an overview of related research; Section \ref{sec:benchmark-model} lays out a clear specification of the circles benchmark model and how it can be utilised effectively; Section \ref{sec:assessed-frameworks} details the frameworks which have been assessed using the benchmark; Section \ref{sec:results} discusses the results obtained from the application of the circles benchmark to each framework; Finally Section \ref{sec:conclusion} presents the concluding remarks and directions for further research.